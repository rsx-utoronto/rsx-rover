<launch>
    <param name="gazebo_on" type="boolean" value="true"/>
    <!-- Load urdf into paramter server-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find rover)/rover/simulation/urdfs/Arm_2023/bruh_with_EE_gazebo.xacro"/>
    <arg name="rvizconfig" default="$(find rover)/rover/simulation/rviz_config/arm_urdf.rviz"/>

    <arg name="model" default="$(find rover)/rover/simulation/urdfs/Arm_2023/bruh_with_EE_gazebo.xacro"/>
    
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" /> -->

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="false"/>
    </include>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(arg model) -urdf -x 0 -y 0 -z 0 -model arm"/>
    
    <rosparam command="load" file="$(find rover)/rover/simulation/config/bruh_EE_joints.yaml"/>
    
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/arm" args="joint1_position_controller joint2_position_controller 
    joint3_position_controller joint4_position_controller joint5_position_controller 
    joint6_position_controller joint7_position_controller joint8_position_controller joint_state_controller"/>

    <!-- <arg name="ik_on" default="false"/> -->
    <!-- <node name="arm_inverse_kinematics" pkg="rover" type="arm_inverse_kinematics.py" if="$(arg ik_on)" output="screen"/> -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" respawn="false" output="screen">
        <remap from="/joint_states" to="/arm/joint_states"/>
    </node>


</launch>