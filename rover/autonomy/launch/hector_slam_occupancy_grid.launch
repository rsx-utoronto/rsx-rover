<?xml version="1.0"?>
<!-- Creating Occupancy Grids with Lidar Data using Hector SLAM-->

<!-- This launch file is a modified version of launch files from: -->
<!-- NickL77: https://github.com/NickL77/RPLidar_Hector_SLAM -->
<!-- avs2805: https://github.com/avs2805/hector_slam_quickstart -->

<launch>
  <!-- Set use_sim_time to true when using rosbags and false when using real-time data.-->
  <param name="/use_sim_time" value="true" />

  <!-- Run Rviz.-->
  <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz" /> -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rover)/rover/autonomy/config/hector_slam_occupancy_grid.rviz"/>


  <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame" />

  <!--For the Ouster OS0, set the base frame and odom frame to os_sensor. -->
  <arg name="base_frame" default="os_sensor" />
  <arg name="odom_frame" default="os_sensor" />

  <arg name="pub_map_odom_transform" default="false" />
  <arg name="scan_subscriber_queue_size" default="5" />

  <!-- Set to scan_topic to the topic name published by pointcloud_to_laserscan. -->
  <arg name="scan_topic" default="scan" />
  <arg name="map_size" default="2048" />

  <!-- Hector Mapping Configuration. -->
  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">

    <!-- Frame names -->
    <param name="map_frame" value="map" />
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />

    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="true" />
    <param name="use_tf_pose_start_estimate" value="false" />
    <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)" />

    <!-- Map size / start point -->
    <param name="map_resolution" value="0.050" />
    <param name="map_size" value="$(arg map_size)" />
    <param name="map_start_x" value="0.5" />
    <param name="map_start_y" value="0.5" />
    <param name="map_multi_res_levels" value="2" />

    <!-- Map update parameters -->
    <param name="update_factor_free" value="0.4" />
    <param name="update_factor_occupied" value="0.9" />
    <param name="map_update_distance_thresh" value="0.4" />
    <param name="map_update_angle_thresh" value="0.06" />
    <param name="laser_z_min_value" value="-1.0" />
    <param name="laser_z_max_value" value="1.0" />

    <!-- Advertising config -->
    <param name="advertise_map_service" value="true" />
    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)" />
    <param name="scan_topic" value="$(arg scan_topic)" />
    <param name="tf_map_scanmatch_transform_frame_name"
      value="$(arg tf_map_scanmatch_transform_frame_name)" />
  </node>

  <!-- pointcloud_to_laserscan Conversion -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/ouster/points" />
    <remap from="scan" to="/scan" />
  </node>

  <!-- <node pkg="tf" type="static_transform_publisher" name="os_imu_tf" args="0 0 0 0 0 0 os_sensor os_imu 100" />
  <node pkg="tf" type="static_transform_publisher" name="os_lidar_tf" args="0 0 0 0 0 0 os_sensor os_lidar 100" /> -->
  <node pkg="tf" type="static_transform_publisher" name="os_tf" args="0 0 0 0 0 0 map os_sensor 100" />

</launch>