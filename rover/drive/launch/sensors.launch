<launch> 
    <!-- Define tf tree -->
    <node pkg="tf" type="static_transform_publisher" name="lidar_broadcaster" args="-0.2 0 1 0 0 0 1 base_link velodyne 100" />
    <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0.0 0 0.1 0 0 0 1 base_link ins_link 100" />
    <node pkg="tf" type="static_transform_publisher" name="gps_broadcaster_ekf" args="-0.2 0 0.6 0 0 0 1 base_link gps_link 100">
        <remap from="tf" to="tf_ekf"/>
    </node> 
    <node pkg="tf" type="static_transform_publisher" name="gps_broadcaster" args="-0.2 0 0.6 0 0 0 1 base_link gps_link 100"/>
    <node pkg="tf" type="static_transform_publisher" name="camera_broadcaster" args="-0.2 0 0.8 -1.57 0 0 base_link camera_link 100" />

    <!-- Launch GPS and IMU drivers-->
    <!-- <include file="$(find inertial_sense_ros)/launch/test.launch"/> -->
    <include file="$(find rover)/rover/drive/launch/ublox.launch" />
    <!-- <node pkg = "rover" name="imu_quaternion_fix" type="imu_quaternion_fix.py" output="screen"/> -->

    <!-- Launch Realsense driver -->

    <!-- <include file="$(find rover)/rover/drive/launch/realsense.launch" /> -->


    <!-- Launch Velodyne lidar driver -->
    <!-- <include file="$(find velodyne_pointcloud)/launch/VLP-32C_points.launch"/> -->

    
    <node pkg="rover" type="gps_converter.py" name="gps_converter" output="screen" />
    <node pkg="rover" type="convert_gps_to_utm.py" name="convert_utm" output="screen" />
    <node pkg="rover" type="transform_utm_to_map.py" name="transform_utm_map" output="screen" />
</launch>
